# Bandit Level 11 â†’ Level 12

## Level Goal
Menemukan password untuk level selanjutnya yang tersimpan dalam file `data.txt`, dimana semua huruf kecil (a-z) dan huruf besar (A-Z) telah dirotasi 13 posisi (ROT13).

## Detailed Command Breakdown

### 1. SSH Connection
```bash
ssh bandit11@bandit.labs.overthewire.org -p 2220
```

### 2. ROT13 Decoding
```bash
# Using tr command
cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m'

# Using multiple ranges
cat data.txt | tr 'A-MN-Za-mn-z' 'N-ZA-Mn-za-m'

# Save to file
cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m' > decoded.txt
```

## Text Transformation

### 1. Basic ROT13
```bash
# Single character
echo "A" | tr 'A' 'N'

# Full alphabet
echo "HELLO" | tr 'A-Z' 'N-ZA-M'

# Case sensitive
echo "Hello" | tr 'A-Za-z' 'N-ZA-Mn-za-m'
```

### 2. Character Classes
```bash
# Upper case only
tr 'A-Z' 'N-ZA-M'

# Lower case only
tr 'a-z' 'n-za-m'

# Numbers
tr '0-9' '5-90-4'
```

### 3. Custom Mappings
```bash
# Single characters
tr 'abc' 'xyz'

# Character sets
tr '[:upper:]' '[:lower:]'

# Multiple transformations
tr 'aeiou' '12345'
```

## Advanced Text Processing

### 1. Multiple Operations
```bash
# Chain transformations
cat file | tr 'A-Z' 'N-ZA-M' | tr 'a-z' 'n-za-m'

# With other tools
cat file | tr 'A-Z' 'N-ZA-M' | grep pattern

# Complex patterns
sed 's/pattern/replacement/' | tr 'A-Z' 'N-ZA-M'
```

### 2. Character Manipulation
```bash
# Delete characters
tr -d '[:digit:]'

# Squeeze repeats
tr -s '[:space:]'

# Complement
tr -c 'a-zA-Z' ' '
```

### 3. Set Operations
```bash
# Character class conversion
tr '[:upper:]' '[:lower:]'

# Multiple classes
tr '[:alnum:]' '[:alpha:]'

# Custom sets
tr -cd '[:print:]\\n'
```

## Encryption Techniques

### 1. Simple Substitution
```bash
# Caesar cipher
tr 'A-Z' 'D-ZA-C'

# Atbash cipher
tr 'A-Za-z' 'Z-Az-a'

# Custom substitution
tr 'A-Z' 'QWERTYUIOPASDFGHJKLZXCVBNM'
```

### 2. Multiple Rounds
```bash
# Double ROT13
tr 'A-Za-z' 'N-ZA-Mn-za-m' | tr 'A-Za-z' 'N-ZA-Mn-za-m'

# Mixed substitution
tr 'A-Z' 'N-ZA-M' | tr 'a-z' '4-90-3'

# Layered encryption
openssl enc | tr 'A-Z' 'N-ZA-M'
```

### 3. Pattern Based
```bash
# Word substitution
sed 's/word/encoded/'

# Regular expression
sed -E 's/[A-Z]/rot13(&)/'

# Context aware
awk '{gsub(/pattern/,"replacement")}'
```

## Data Processing

### 1. File Operations
```bash
# Process whole file
tr 'A-Za-z' 'N-ZA-Mn-za-m' < input > output

# Stream processing
tail -f log | tr 'A-Za-z' 'N-ZA-Mn-za-m'

# Multiple files
cat file* | tr 'A-Za-z' 'N-ZA-Mn-za-m'
```

### 2. Text Transformation
```bash
# Case conversion
tr '[:lower:]' '[:upper:]'

# Character deletion
tr -d '[:punct:]'

# Space normalization
tr -s '[:space:]' ' '
```

### 3. Data Cleaning
```bash
# Remove non-printable
tr -cd '[:print:]\\n'

# Convert line endings
tr -d '\\r'

# Clean whitespace
tr -s '[:space:]' ' '
```

## Best Practices

### 1. Input Handling
- Validate input format
- Handle special characters
- Consider character sets
- Check file encoding

### 2. Performance
- Use appropriate tools
- Handle large files
- Stream when possible
- Monitor resource usage

### 3. Security
- Validate transformations
- Handle errors
- Protect sensitive data
- Document changes

## Troubleshooting

### 1. Common Issues
- Character set mismatches
- Encoding problems
- Special characters
- Performance issues

### 2. Solutions
```bash
# Check character sets
locale charmap

# Handle encoding
iconv -f utf-8 -t ascii

# Debug output
tr -d '[:print:]\\n' | xxd
```

### 3. Debugging
```bash
# View transformation
echo "test" | tr 'a-z' 'A-Z' -v

# Check results
diff <(cat file) <(cat file | tr 'a-z' 'A-Z')

# Monitor process
strace tr 'a-z' 'A-Z' < file
```

## Additional Resources

### 1. Man Pages
```bash
man tr
man sed
man awk
man locale
```

### 2. Documentation
- Text Processing Guide
- Character Encoding
- Unix Tools
- Security Standards

### 3. Tools
- tr
- sed
- awk
- perl
