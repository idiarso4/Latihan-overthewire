# Bandit Level 6 → Level 7

## Level Goal
Menemukan password untuk level selanjutnya yang tersimpan dalam file dengan properti:
- owned by user bandit7
- owned by group bandit6
- 33 bytes in size

## Detailed Command Breakdown

### 1. SSH Connection
```bash
ssh bandit6@bandit.labs.overthewire.org -p 2220
```

### 2. Advanced File Search

#### 2.1 Find by Owner and Group
```bash
# Basic search
find / -user bandit7 -group bandit6 -size 33c 2>/dev/null

# With additional filters
find / -user bandit7 -group bandit6 -size 33c -type f 2>/dev/null

# With permission check
find / -user bandit7 -group bandit6 -size 33c -type f -readable 2>/dev/null
```

## User and Group Management

### 1. User Information
```bash
# View user info
id username
getent passwd username
finger username

# List user's files
find / -user username
lsof -u username
```

### 2. Group Information
```bash
# View group info
groups username
getent group groupname
id -Gn username

# List group's files
find / -group groupname
```

### 3. Ownership Commands
```bash
# Change owner
chown user:group file
chown -R user:group directory

# Change group only
chgrp group file
chgrp -R group directory
```

## File System Permissions

### 1. Permission Structure
```
-rwxrwxrwx  1  owner group  size  date  filename
↑ ↑↑↑ ↑↑↑ ↑↑↑  ↑   ↑     ↑     ↑     ↑     ↑
│ │││ │││ │││  │   │     │     │     │     └─ name
│ │││ │││ │││  │   │     │     │     └─ modification date
│ │││ │││ │││  │   │     │     └─ size
│ │││ │││ │││  │   │     └─ group
│ │││ │││ │││  │   └─ owner
│ │││ │││ └││─ other permissions
│ │││ └││─ group permissions
│ └││─ user permissions
└─ file type
```

### 2. Special Permissions
```bash
# SUID (4000)
chmod u+s file
find / -perm -4000

# SGID (2000)
chmod g+s file
find / -perm -2000

# Sticky Bit (1000)
chmod +t directory
find / -perm -1000
```

## Advanced Search Techniques

### 1. Complex Find Commands
```bash
# Multiple owners
find / \( -user user1 -o -user user2 \) -ls

# Exclude directories
find / -user bandit7 -group bandit6 ! -path "/proc/*" ! -path "/sys/*"

# With size ranges
find / -user bandit7 -size +30c -size -40c
```

### 2. Combining with Other Tools
```bash
# With grep
find / -type f -exec grep -l "pattern" {} \;

# With xargs
find / -type f -print0 | xargs -0 file

# With parallel
find / -type f -print0 | parallel -0 file
```

### 3. Performance Optimization
```bash
# Optimize directory traversal
find / -mount -user bandit7

# Limit depth
find / -maxdepth 3 -user bandit7

# Handle errors
find / -user bandit7 2>/dev/null
```

## System Administration Tasks

### 1. User Management
```bash
# Create user
useradd -m username
passwd username

# Modify user
usermod -aG group username
chage -l username
```

### 2. Group Management
```bash
# Create group
groupadd groupname

# Modify group
gpasswd -a username groupname
gpasswd -d username groupname
```

### 3. File Ownership Audit
```bash
# Find files without owner
find / -nouser -o -nogroup

# Find world-writable files
find / -perm -2 ! -type l -ls

# Check home directories
find /home -mindepth 1 -maxdepth 1 -type d -exec ls -ld {} \;
```

## Security Considerations

### 1. Permission Management
```bash
# Secure sensitive files
chmod 600 private_file
chmod 700 private_directory

# Remove world permissions
chmod o-rwx sensitive_file

# Set default permissions
umask 027
```

### 2. Access Control
```bash
# Access control lists
getfacl file
setfacl -m u:user:rwx file
setfacl -m g:group:rx file
```

### 3. Security Audit
```bash
# Find unauthorized SUID
find / -perm -4000 -printf "%p\t%u\t%g\n"

# Check file permissions
find / -type f -perm -0777

# Audit user files
find /home -user root
```

## Troubleshooting

### 1. Common Issues
- Permission denied
- No such file or directory
- Too many open files
- Invalid user/group

### 2. Diagnostic Commands
```bash
# Check process ownership
ps aux | grep username

# View file attributes
lsattr filename
chattr +i filename

# Track file access
auditctl -w /path/to/file -p rwxa
```

### 3. Error Handling
```bash
# Handle permission errors
find / ... 2>/dev/null

# Debug commands
set -x
command
set +x
```

## Best Practices

### 1. File Organization
- Use appropriate permissions
- Maintain clear ownership
- Document special cases
- Regular audits

### 2. Security
- Principle of least privilege
- Regular permission reviews
- Monitor sensitive files
- Document changes

### 3. Maintenance
- Regular cleanup
- Permission verification
- Ownership audit
- Documentation update

## Additional Resources

### 1. Man Pages
```bash
man find
man chown
man chmod
man acl
```

### 2. System Documentation
- Linux Security Guide
- User Management Guide
- File System Hierarchy
- Access Control Guide

### 3. Security Standards
- CIS Benchmarks
- NIST Guidelines
- Security Policies
- Compliance Requirements
