# Bandit Level 4 â†’ Level 5

## Level Goal
Menemukan password untuk level selanjutnya yang tersimpan dalam satu-satunya file human-readable di directory `inhere`.

## Detailed Command Breakdown

### 1. SSH Connection
```bash
ssh bandit4@bandit.labs.overthewire.org -p 2220
```

### 2. File Analysis Commands

#### 2.1 Basic File Type Detection
```bash
file ./*                    # Check all files
file -i ./*                # Show MIME types
file -z ./*                # Look inside compressed
```

#### 2.2 Content Analysis
```bash
strings filename           # Extract readable strings
hexdump -C filename       # View hex and ASCII
xxd filename              # Another hex viewer
```

## Understanding File Types

### 1. File Signatures
- Magic numbers at start
- File extensions
- MIME types
- Content patterns

### 2. Common File Types
```
ASCII text       # Human readable text
UTF-8 text       # Unicode text
Binary data      # Machine code
Data             # Unknown format
Empty            # Zero-length file
```

### 3. Text Encodings
- ASCII (7-bit)
- UTF-8 (Variable)
- UTF-16 (16-bit)
- ISO-8859-1 (8-bit)
- Windows-1252 (8-bit)

## File Analysis Tools

### 1. The 'file' Command
```bash
# Basic usage
file filename

# Detailed options
file -b filename          # Brief mode
file -i filename          # MIME type
file -k filename          # Keep going
file -z filename          # Look inside compressed
```

### 2. String Analysis
```bash
# Find printable strings
strings -n 8 filename     # Min 8 chars
strings -e l filename     # 16-bit little-endian
strings -f filename       # Show filename
```

### 3. Binary Analysis
```bash
# Hexdump formats
hexdump -C filename       # Canonical hex+ASCII
hexdump -x filename       # Two-byte hex
od -tx1z filename        # Octal dump
```

## Content Detection Methods

### 1. Text Detection
```bash
# Using grep
grep -I . filename        # Skip binary files
grep -l '^[[:print:]]*$' *

# Using file
file -i * | grep "text/plain"
```

### 2. Character Set Analysis
```bash
# Check encoding
chardet filename
iconv -f UTF-8 -t ASCII filename
uchardet filename
```

### 3. Pattern Matching
```bash
# Find specific patterns
grep -P '[\x00-\x1F]' filename    # Control chars
grep -P '[^\x00-\x7F]' filename   # Non-ASCII
```

## System Administration Tasks

### 1. File Management
```bash
# Sort by type
find . -type f -exec file {} \; | sort

# Group by type
find . -type f -exec file {} \; | awk -F: '{print $2}' | sort | uniq -c
```

### 2. Backup Verification
```bash
# Check for corruption
find /backup -type f -exec file {} \; | grep -v "ASCII text"

# Verify text files
find . -type f -exec file {} \; | grep "text"
```

### 3. Log Analysis
```bash
# Find binary in logs
find /var/log -type f -exec file {} \; | grep -v "text"

# Check compressed logs
zcat log.gz | file -
```

## Security Considerations

### 1. File Integrity
```bash
# Generate checksums
md5sum filename
sha256sum filename

# Compare files
cmp file1 file2
diff -u file1 file2
```

### 2. Malware Detection
```bash
# Look for executables
find . -type f -exec file {} \; | grep "executable"

# Check for scripts
find . -type f -exec file {} \; | grep "script"
```

### 3. Hidden Content
```bash
# Find steganography
steghide info filename
binwalk filename
foremost filename
```

## Advanced Techniques

### 1. Automated Analysis
```bash
#!/bin/bash
for file in *; do
    if file "$file" | grep -q "ASCII text"; then
        echo "Reading $file:"
        cat "$file"
    fi
done
```

### 2. Deep Analysis
```bash
# Entropy analysis
ent filename

# Statistical analysis
frequency filename

# Language detection
langdetect filename
```

### 3. Custom Filters
```bash
# Remove non-printable
tr -cd '[:print:]\n' < filename

# Convert encodings
iconv -f UTF-16 -t UTF-8 filename
```

## Best Practices

### 1. File Handling
- Check before opening
- Use appropriate tools
- Handle errors gracefully
- Preserve original files

### 2. Performance
- Use efficient commands
- Filter early
- Batch operations
- Cache results

### 3. Security
- Validate input
- Handle untrusted files safely
- Maintain audit logs
- Use secure deletion

## Troubleshooting

### 1. Common Issues
- Encoding problems
- Corrupt files
- Mixed content
- Hidden data

### 2. Solutions
```bash
# Fix encodings
iconv -f ISO-8859-1 -t UTF-8 filename

# Repair text files
dos2unix filename
unix2dos filename
```

### 3. Verification
```bash
# Validate format
file -k filename

# Check consistency
cksum filename
```

## Additional Resources

### 1. Man Pages
```bash
man file
man strings
man hexdump
man iconv
```

### 2. Tools
- File viewers
- Hex editors
- Encoding converters
- Analysis tools

### 3. Documentation
- File format specs
- Encoding standards
- Tool guides
- Security practices
