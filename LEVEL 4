# Bandit Level 3 â†’ Level 4

## Level Goal
Menemukan password untuk level selanjutnya yang tersimpan dalam file tersembunyi (hidden file) di directory `inhere`.

## Langkah Penyelesaian

1. Login ke server menggunakan SSH:
   ```bash
   ssh bandit3@bandit.labs.overthewire.org -p 2220
   ```
   (Gunakan password yang didapat dari level sebelumnya)

2. Masuk ke direktori `inhere`:
   ```bash
   cd inhere
   ```

3. List semua file (termasuk yang tersembunyi) menggunakan opsi -a:
   ```bash
   ls -la
   ```
   File tersembunyi di Linux dimulai dengan titik (.)

4. Setelah menemukan file tersembunyi, baca isinya dengan:
   ```bash
   cat .hidden
   ```

5. Salin password yang ditampilkan dan logout:
   ```bash
   exit
   ```

## Penjelasan Teknis

### File Tersembunyi di Linux
- File yang dimulai dengan titik (.) secara default tersembunyi
- Tidak akan terlihat dengan perintah `ls` biasa
- Memerlukan opsi khusus untuk melihatnya

### Opsi ls yang Berguna
- `ls -a`: menampilkan semua file termasuk yang tersembunyi
- `ls -l`: menampilkan detail lengkap (permission, size, date)
- `ls -la`: kombinasi keduanya

### Mengapa File Tersembunyi?
- Biasanya untuk menyimpan file konfigurasi
- Menghindari clutter di direktori
- Menyembunyikan file yang tidak perlu dilihat user

## Tips
- Selalu periksa file tersembunyi saat mencari sesuatu
- Gunakan `ls -la` untuk melihat informasi lengkap
- Perhatikan permission file untuk memastikan bisa diakses

## Konsep yang Dipelajari
- Konsep file tersembunyi di Linux
- Penggunaan opsi ls untuk melihat file tersembunyi
- Navigasi direktori dasar
- Pentingnya memeriksa file tersembunyi dalam security testing

## Detailed Command Breakdown

### 1. SSH Connection
```bash
ssh bandit3@bandit.labs.overthewire.org -p 2220
```

### 2. Hidden Files Navigation

#### 2.1 Basic Commands
```bash
cd inhere           # Change to target directory
ls -la             # List all files including hidden
ls -A              # List almost all (no . and ..)
ls --hide=.        # Hide dot entries
```

#### 2.2 Find Hidden Files
```bash
find . -type f -name ".*"    # Find hidden files
find . -type d -name ".*"    # Find hidden directories
```

## Hidden Files in Linux

### 1. What Makes a File Hidden?
- Filename starts with dot (.)
- Not shown by default ls
- Special meaning in Unix/Linux
- Used for configuration files

### 2. Common Hidden Files
```
.bashrc         # Bash configuration
.profile        # Login shell config
.ssh/           # SSH configuration
.config/        # Application configs
.cache/         # Cache data
.local/         # User-specific data
```

### 3. Hidden File Types
1. Configuration Files
   - User preferences
   - Application settings
   - System configs

2. Cache Files
   - Temporary data
   - Performance optimization
   - Browser cache

3. Data Files
   - Application data
   - User data
   - Backup files

## File Operations

### 1. Creating Hidden Files
```bash
touch .hidden_file           # Create empty hidden file
mkdir .hidden_dir           # Create hidden directory
mv visible_file .hidden    # Make file hidden
```

### 2. Viewing Hidden Files
```bash
ls -d .*                   # List only hidden
tree -a                    # Show tree with hidden
ls -laR                   # Recursive with hidden
```

### 3. Managing Hidden Files
```bash
cp -r .* backup/          # Copy all hidden
rm -rf .*                 # Remove hidden (careful!)
chmod 600 .*              # Set permissions
```

## Advanced Features

### 1. Find Commands
```bash
# Find by type and name
find . -type f -name ".*" -ls

# Find by size
find . -type f -name ".*" -size -1M

# Find by time
find . -type f -name ".*" -mtime -7
```

### 2. Grep in Hidden Files
```bash
grep -r "pattern" .*              # Search in hidden
grep --exclude=".*" "pattern" *   # Exclude hidden
grep --exclude-dir=".*" -r "pattern" .
```

### 3. Backup Operations
```bash
# Tar with hidden files
tar czf backup.tar.gz .*

# Rsync with hidden
rsync -av --include=".*" source/ dest/
```

## System Administration

### 1. Configuration Management
```bash
# Backup configs
cp -r ~/.config backup/

# Reset to defaults
rm -rf ~/.config/*

# Compare configs
diff -r ~/.config backup/.config
```

### 2. User Management
```bash
# New user setup
cp -r /etc/skel/. /home/newuser/
chown -R newuser:newuser /home/newuser
```

### 3. Application Data
```bash
# Clean old data
find ~/.cache -type f -atime +30 -delete

# Move to new location
mv ~/.app_data/* /new/location/
ln -s /new/location ~/.app_data
```

## Security Considerations

### 1. Permission Management
```bash
# Secure sensitive files
chmod 600 ~/.ssh/id_rsa
chmod 700 ~/.ssh

# Check permissions
find ~ -name ".*" -type f -perm /o+w
```

### 2. Encryption
```bash
# Encrypt hidden file
gpg -c .secret_file

# Decrypt hidden file
gpg .secret_file.gpg
```

### 3. Secure Deletion
```bash
shred -u ~/.secret_file
find . -name ".*" -type f -exec shred -u {} \;
```

## Troubleshooting

### 1. Common Issues
- Hidden files not showing
- Permission denied
- Disk space issues
- Corrupt configuration

### 2. Diagnostic Commands
```bash
# Check file type
file .hidden_file

# Check permissions
namei -l .hidden_file

# Check disk usage
du -sh .*
```

### 3. Recovery Options
```bash
# Backup recovery
cp ~/.config{.bak,}

# Reset to default
cp /etc/skel/.bashrc ~/

# Fix permissions
chmod -R u+rw ~/.config
```

## Best Practices

### 1. Organization
- Use meaningful names
- Maintain consistent structure
- Document configurations
- Regular backups

### 2. Security
- Restrict permissions
- Encrypt sensitive data
- Regular audits
- Secure deletion

### 3. Maintenance
- Regular cleanup
- Version control
- Documentation
- Backup strategy

## Additional Resources

### 1. Documentation
- Man pages
- Info documentation
- Online guides
- Community forums

### 2. Tools
- File managers
- Backup utilities
- Security tools
- Monitoring software

### 3. Training
- System administration
- Security courses
- Bash scripting
- Linux fundamentals
